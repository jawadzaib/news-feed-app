version: "3.8"

services:
  nginx:
    image: nginx:stable-alpine
    container_name: news-app-nginx
    ports:
      - "8000:80"
    volumes:
      - ./api:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - news-app-network

  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: news-app-laravel
    volumes:
      - ./api:/var/www/html
    depends_on:
      - db
      - redis
    networks:
      - news-app-network

  db:
    image: mysql:8.0
    container_name: news-app-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/db/init-test-db.sh:/docker-entrypoint-initdb.d/init-test-db.sh
    ports:
      - "3306:3306"
    networks:
      - news-app-network

  redis:
    image: redis:alpine
    container_name: news-app-redis
    ports:
      - "6379:6379"
    networks:
      - news-app-network

  worker: # New Queue Worker service
    build:
      context: . # Build context is the root directory, same as 'app'
      dockerfile: docker/app/Dockerfile # Uses the same Dockerfile as 'app'
    container_name: news-app-worker
    volumes:
      - ./api:/var/www/html # Mount the Laravel code
    depends_on:
      - app
      - redis
    networks:
      - news-app-network
    command: php artisan queue:work # Command to run the queue worker

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: news-app-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - news-app-network
    depends_on:
      - nginx

networks:
  news-app-network:
    driver: bridge

volumes:
  db_data:
